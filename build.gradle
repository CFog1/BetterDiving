buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'

version = "$mcVersion-$modVersion"
group = 'meldexun.better_diving'
archivesBaseName = "$modName"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.18.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            taskName 'runClient BD 1.18'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'

            mods {
                better_diving {
                    source sourceSets.main
                }
            }
        }

        server {
            taskName 'runServer BD 1.18'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'

            mods {
                better_diving {
                    source sourceSets.main
                }
            }
        }

        data {
            taskName 'runData BD 1.18'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'info'
            args '--mod', 'better_diving', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                better_diving {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    includedDependencies
    implementation.extendsFrom(includedDependencies)

    buildDependencies
}

repositories {
    ivy {
        url 'https://github.com/'

        patternLayout {
            artifact '[organisation]/[module]/releases/download/v[revision]/[module]-[revision].[ext]'
        }

        metadataSources { artifact() } 
    }

    maven { url 'https://www.cursemaven.com' }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.21'
    includedDependencies 'meldexun:ReflectionUtil:1.0.0@jar'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
    add sourceSets.main, 'mixins.better_diving.refmap.json'
    config 'mixins.better_diving.json'
}

jar {
    from {
        configurations.includedDependencies.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

compileJava {
    classpath = sourceSets.main.compileClasspath + configurations.buildDependencies
}

jar.finalizedBy('reobfJar') 

task apiJar(type: Jar) {
    archiveClassifier.set('api')
    include 'meldexun/better_diving/api/**/*'
    from sourceSets.main.allSource
    from sourceSets.main.output
}

tasks.build.dependsOn apiJar
